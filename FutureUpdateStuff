using Microsoft.Xna.Framework;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;
using Terraria.ObjectData;

namespace TerrariaExtra.Tiles
{
	public class CBC : ModTile
	{
		public override void SetDefaults() {
			Main.tileSolidTop[Type] = true;
			Main.tileFrameImportant[Type] = true;
			Main.tileNoAttach[Type] = true;
			Main.tileLavaDeath[Type] = true;
			TileObjectData.newTile.CopyFrom(TileObjectData.Style3x4);
			TileObjectData.newTile.CoordinateHeights = new[] { 16, 16, 16, 16 };
			TileObjectData.newTile.CoordinateWidth = 48;
			TileObjectData.addTile(Type);
			ModTranslation name = CreateMapEntryName();
			name.SetDefault("Chlorophyte Bookcase");
			AddMapEntry(new Color(200, 200, 200), name);
			dustType = mod.DustType("NightDust");
			disableSmartCursor = true;
			adjTiles = new int[] { TileID.Bookcases };
		}

		public override void NumDust(int i, int j, bool fail, ref int num) {
			num = fail ? 1 : 3;
		}

		public override void KillMultiTile(int i, int j, int frameX, int frameY) {
			Item.NewItem(i * 16, j * 16, 32, 16, mod.ItemType("CBC"));
		}
	}
}

-------------------------

using Terraria.ID;
using Terraria.ModLoader;

namespace TerrariaExtra.Items
{
	public class CBC : ModItem
	{
		public override void SetStaticDefaults() {
			DisplayName.SetDefault("Chlorophyte Bookcase");
            Tooltip.SetDefault("Used to make Late-Hardmode spell books");
		}

		public override void SetDefaults() {
			item.width = 30;
			item.height = 34;
			item.maxStack = 99;
			item.useTurn = true;
			item.autoReuse = true;
			item.useAnimation = 15;
			item.useTime = 10;
			item.useStyle = 1;
			item.consumable = true;
			item.value = 15000;
			item.createTile = mod.TileType("CBC");
		}

		public override void AddRecipes() {
			ModRecipe recipe = new ModRecipe(mod);
			recipe.AddIngredient(ItemID.ChlorophyteBar, 14);
			recipe.AddIngredient(ItemID.Bookcase, 1);
            recipe.AddTile(TileID.MythrilAnvil);
			recipe.SetResult(this);
			recipe.AddRecipe();
		}
	}
}